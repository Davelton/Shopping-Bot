from aiogram import Bot, types
from aiogram.types import LabeledPrice, PreCheckoutQuery
from config import PAY_TOKEN


async def order_1(call: types.CallbackQuery, bot: Bot):
    await bot.send_invoice(call.from_user.id,
                           title="–ß–µ—Ä–Ω–∞—è –ò–∫—Ä–∞",
                           description="–°–≤–µ–∂–∞—è,–ù–∞—Ç—É—Ä–∞–ª—å–Ω–∞—è,–ö–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–∞—è –ß–µ—Ä–Ω–∞—è –ò–∫—Ä–∞ ",
                           provider_token=PAY_TOKEN,
                           currency='UZS',
                           photo_url="https://cs1.livemaster.ru/storage/c6/7d/c8e61298320cb87cf6ec2fe566sg--suveniry-i-podarki-chernaya-ikra-v-banke-zhemchug-biser-dlya-.jpg", # noqa
                           photo_height=800,
                           photo_width=1000,
                           photo_size=100,
                           is_flexible=False,
                           prices=[
                               LabeledPrice(label="–¶–µ–Ω–∞", amount=565_000_00),
                               LabeledPrice(label="–°–∫–∏–¥–∫–∞", amount=-55_000_00)
                           ],
                           start_parameter='time-machine-example',
                           payload='–ß–µ—Ä–Ω–∞—è –ò–∫—Ä–∞',
                           request_timeout=15
                           )


async def pre_checkout_query(pre_checkout_query: PreCheckoutQuery, bot: Bot): # NOQA
    await bot.answer_pre_checkout_query(pre_checkout_query.id, ok=True)


async def successful_payment(message: types.Message, bot: Bot):
    msg = f"""
    –£—Å–ø–µ—à–Ω–∞—è –û–ø–ª–∞—Ç–∞ ‚úÖ 
    –ù–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ : {message.successful_payment.invoice_payload}
    –¶–µ–Ω–∞: {message.successful_payment.total_amount // 100} {message.successful_payment.currency} üí∏
    –£—Å–ø–µ—à–Ω–æ –ö—É–ø–ª–µ–Ω–Ω–æ :  ‚úÖ 
    """

    await message.answer(msg)


async def order_2(call: types.CallbackQuery, bot: Bot):
    await bot.send_invoice(call.from_user.id,
                           title="–ù–∞—Ç—É—Ä–∞–ª—å–Ω—ã–µ,–°–æ–ª–µ–Ω–Ω—ã–µ –æ–≥—É—Ä—á–∏–∫–∏ –î—è–¥—è –í–∞–Ω—è",
                           description="–•—Ä—É—Å—Ç—è—â–∏–µ, –≤–∫—É—Å–Ω—ã–µ, –æ—Ç–ª–∏—á–Ω–∞—è –∑–∞–∫—É—Å–∫–∞",
                           provider_token=PAY_TOKEN,
                           currency='UZS',
                           photo_url="https://dyadya-vanya.ru/uploads/product/big/cf/07/0149b089a778d2bacb40a79870ac27ecc0ae633178544b7f5.jpg", # noqa
                           photo_height=800,
                           photo_width=1000,
                           photo_size=100,
                           is_flexible=False,
                           prices=[
                               LabeledPrice(label="–¶–µ–Ω–∞", amount=40_000_00),
                               LabeledPrice(label="–°–∫–∏–¥–∫–∞", amount=-5_000_00)
                           ],
                           start_parameter='time-machine-example',
                           payload='–û–≥—É—Ä—á–∏–∫–∏ –°–æ–ª–µ–Ω–Ω—ã–µ',
                           request_timeout=15
                           )

async def pre_checkout_query(pre_checkout_query: PreCheckoutQuery, bot: Bot): # NOQA
    await bot.answer_pre_checkout_query(pre_checkout_query.id, ok=True)


async def successful_payment_2(message: types.Message, bot: Bot):
    msg = f"""
    –£—Å–ø–µ—à–Ω–∞—è –û–ø–ª–∞—Ç–∞ ‚úÖ 
    –ù–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ : {message.successful_payment.invoice_payload}
    –¶–µ–Ω–∞: {message.successful_payment.total_amount // 100} {message.successful_payment.currency} üí∏
    –£—Å–ø–µ—à–Ω–æ –ö—É–ø–ª–µ–Ω–Ω–æ :  ‚úÖ 
    """
    await message.answer(msg)


async def order_3(call: types.CallbackQuery, bot: Bot):
    await bot.send_invoice(call.from_user.id,
                           title="–ö–æ–ª–±–∞—Å–∞ –î–æ–∫—Ç–æ—Ä—Å–∫–∞—è",
                           description="–°–æ—á–Ω–∞—è –∫–æ–ª–±–∞—Å–∞, –≤–∞—Ä–µ–Ω–æ–µ –º—è—Å–Ω–æ–µ",
                           provider_token=PAY_TOKEN,
                           currency='UZS',
                           photo_url="https://belmostorg.ru/image/cache/catalog/grodno/kolb-varen-doktorskaya-klassik-extra-1200x800.jpg", # noqa
                           photo_height=800,
                           photo_width=1000,
                           photo_size=100,
                           is_flexible=False,
                           prices=[
                               LabeledPrice(label="–¶–µ–Ω–∞", amount=65_000_00),
                               LabeledPrice(label="–°–∫–∏–¥–∫–∞", amount=-15_000_00)
                           ],
                           start_parameter='time-machine-example',
                           payload='–ö–æ–ª–±–∞—Å–∫–∞ –í–∞—Ä–µ–Ω–∞—è',
                           request_timeout=15
                           )

async def pre_checkout_query(pre_checkout_query: PreCheckoutQuery, bot: Bot): # NOQA
    await bot.answer_pre_checkout_query(pre_checkout_query.id, ok=True)


async def successful_payment_3(message: types.Message, bot: Bot):
    msg = f"""
    –£—Å–ø–µ—à–Ω–∞—è –û–ø–ª–∞—Ç–∞ ‚úÖ 
    –ù–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ : {message.successful_payment.invoice_payload}
    –¶–µ–Ω–∞: {message.successful_payment.total_amount // 100} {message.successful_payment.currency} üí∏
    –£—Å–ø–µ—à–Ω–æ –ö—É–ø–ª–µ–Ω–Ω–æ :  ‚úÖ 
    """
    await message.answer(msg)


async def order_4(call: types.CallbackQuery, bot: Bot):
    await bot.send_invoice(call.from_user.id,
                           title="–ß–∏–ø—Å—ã Doritos",
                           description="–°–æ—á–Ω–∞—è –∫–æ–ª–±–∞—Å–∞, –≤–∞—Ä–µ–Ω–æ–µ –º—è—Å–Ω–æ–µ",
                           provider_token=PAY_TOKEN,
                           currency='UZS',
                           photo_url="https://sweetopt24.ru/wp-content/uploads/2021/01/doritos-kukuruznye-chipsy-tortilla-nacho-cheese-160gr-2.jpg", # noqa
                           photo_height=800,
                           photo_width=1000,
                           photo_size=100,
                           is_flexible=False,
                           prices=[
                               LabeledPrice(label="–¶–µ–Ω–∞", amount=30_000_00),
                               LabeledPrice(label="–°–∫–∏–¥–∫–∞", amount=-5_000_00)
                           ],
                           start_parameter='time-machine-example',
                           payload='–í–∫—É—Å–Ω—ã–µ,–∫—É–∫—É—Ä—É–∑–Ω—ã–µ —á–∏–ø—Å—ã',
                           request_timeout=15
                           )

async def pre_checkout_query(pre_checkout_query: PreCheckoutQuery, bot: Bot): # NOQA
    await bot.answer_pre_checkout_query(pre_checkout_query.id, ok=True)


async def successful_payment_4(message: types.Message, bot: Bot):
    msg = f"""
    –£—Å–ø–µ—à–Ω–∞—è –û–ø–ª–∞—Ç–∞ ‚úÖ 
    –ù–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ : {message.successful_payment.invoice_payload}
    –¶–µ–Ω–∞: {message.successful_payment.total_amount // 100} {message.successful_payment.currency} üí∏
    –£—Å–ø–µ—à–Ω–æ –ö—É–ø–ª–µ–Ω–Ω–æ :  ‚úÖ 
    """
    await message.answer(msg)
